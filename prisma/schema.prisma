generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  niku       Int       @id
  nama_admin String    @db.VarChar(255)
  email      String    @db.VarChar(100)
  user       user      @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_admin")
  panduan    panduan[]

  @@index([email], map: "fk_user_admin")
}

model dosen {
  nip_dosen       Int           @id
  nama_dosen      String        @db.VarChar(255)
  email           String        @db.VarChar(100)
  bidang_keahlian String        @db.VarChar(99)
  id_jadwal_dosen Int
  jadwal_dosen    jadwal_dosen  @relation(fields: [id_jadwal_dosen], references: [id_jadwal_dosen], onDelete: NoAction, onUpdate: NoAction, map: "fk_jadwal_dosen_dosen")
  user            user          @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_dosen")
  pendaftaran     pendaftaran[]

  @@index([id_jadwal_dosen], map: "fk_jadwal_dosen_dosen")
  @@index([email], map: "fk_user_dosen")
}

model evaluasi_sistem {
  id_evaluasi    Int       @id
  kualitas_ui    String    @db.VarChar(100)
  kinerja_sistem String    @db.VarChar(100)
  kritik_saran   String    @db.Text
  tanggal_isi    DateTime  @db.Date
  nim            Int
  mahasiswa      mahasiswa @relation(fields: [nim], references: [nim], onDelete: NoAction, onUpdate: NoAction, map: "fk_mahasiswa_evaluasi_sistem")

  @@index([nim], map: "fk_mahasiswa_evaluasi_sistem")
}

model jadwal_dosen {
  id_jadwal_dosen Int      @id
  tanggal_mulai   DateTime @db.Date
  tanggal_selesai DateTime @db.Date
  dosen           dosen[]
}

model jadwal_pendaftaran {
  id_jadwal      String       @id @db.VarChar(100)
  id_pendaftaran Int
  jam_mulai      DateTime     @db.Time(0)
  jam_selesai    DateTime     @db.Time(0)
  status         String       @db.VarChar(50)
  dosen_penguji  String       @db.VarChar(99)
  id_kuota       Int
  kuota_semhas   kuota_semhas @relation(fields: [id_kuota], references: [id_kuota], onDelete: NoAction, onUpdate: NoAction, map: "fk_kuota_semhas_jadwal_pendaftaran")
  pendaftaran    pendaftaran  @relation(fields: [id_pendaftaran], references: [id_pendaftaran], onDelete: NoAction, onUpdate: NoAction, map: "fk_pendaftaran_jadwal_pendaftaran")

  @@index([id_kuota], map: "fk_kuota_semhas_jadwal_pendaftaran")
  @@index([id_pendaftaran], map: "fk_pendaftaran_jadwal_pendaftaran")
}

model kadep {
  nip_kadep  Int    @id
  nama_kadep String @db.VarChar(99)
  email      String @db.VarChar(100)
  user       user   @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_kadep")

  @@index([email], map: "fk_user_kadep")
}

model kuota_semhas {
  id_kuota           Int                  @id
  kuota_max          Int
  minggu             DateTime             @db.Time(0)
  jadwal_pendaftaran jadwal_pendaftaran[]
}

model mahasiswa {
  nim             Int               @id
  nama_lengkap    String            @db.VarChar(99)
  email           String            @db.VarChar(100)
  status          String            @db.VarChar(99)
  evaluasi_sistem evaluasi_sistem[]
  user            user              @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_mahasiswa")
  pendaftaran     pendaftaran[]

  @@index([email], map: "fk_user_mahasiswa")
}

model nilai_semhas {
  id_nilai        Int         @id
  status_semhas   String      @db.VarChar(50)
  bobot_penilaian Int
  komentar        String      @db.Text
  id_rubik        Int
  id_pendaftaran  Int
  pendaftaran     pendaftaran @relation(fields: [id_pendaftaran], references: [id_pendaftaran], onDelete: NoAction, onUpdate: NoAction, map: "fk_pendaftaran_nilai_semhas")
  rubik           rubik       @relation(fields: [id_rubik], references: [id_rubik], onDelete: NoAction, onUpdate: NoAction, map: "fk_rubik_nilai_semhas")

  @@index([id_pendaftaran], map: "fk_pendaftaran_nilai_semhas")
  @@index([id_rubik], map: "fk_rubik_nilai_semhas")
}

model panduan {
  id_panduan     Int      @id
  nama_file      String   @db.VarChar(255)
  deskripsi      String   @db.Text
  tanggal_unggah DateTime @db.Date
  niku           Int
  admin          admin    @relation(fields: [niku], references: [niku], onDelete: NoAction, onUpdate: NoAction, map: "fk_admin_panduan")

  @@index([niku], map: "fk_admin_panduan")
}

model pendaftaran {
  id_pendaftaran     Int                  @id
  nim                Int
  nama_lengkap       String               @db.VarChar(255)
  judul              String               @db.VarChar(799)
  bidang_penelitian  String               @db.VarChar(99)
  nip_dosen          Int
  nim_mhs            Int
  nama_laporan       String               @db.VarChar(255)
  file_laporan       Bytes                @db.Blob
  nama_krs           String               @db.VarChar(255)
  file_krs           Bytes                @db.Blob
  nama_pengesahan    String               @db.VarChar(255)
  file_pengesahan    Bytes                @db.Blob
  nama_ppt           String               @db.VarChar(255)
  file_ppt           Bytes                @db.Blob
  id_periode         Int
  jadwal_pendaftaran jadwal_pendaftaran[]
  nilai_semhas       nilai_semhas[]
  dosen              dosen                @relation(fields: [nip_dosen], references: [nip_dosen], onDelete: NoAction, onUpdate: NoAction, map: "fk_dosen_pendaftaran")
  mahasiswa          mahasiswa            @relation(fields: [nim], references: [nim], onDelete: NoAction, onUpdate: NoAction, map: "fk_mahasiswa_pendaftaran")
  periode_semhas     periode_semhas       @relation(fields: [id_periode], references: [id_periode], onDelete: NoAction, onUpdate: NoAction, map: "fk_periode_semhas_pendaftaran")

  @@index([nip_dosen], map: "fk_dosen_pendaftaran")
  @@index([nim], map: "fk_mahasiswa_pendaftaran")
  @@index([id_periode], map: "fk_periode_semhas_pendaftaran")
}

model periode_semhas {
  id_periode    Int           @id
  semester      Int
  tanggal_buka  DateTime      @db.Date
  tanggal_tutup DateTime      @db.Date
  status        String        @db.VarChar(50)
  pendaftaran   pendaftaran[]
}

model rubik {
  id_rubik     Int            @id
  kriteria     String         @db.VarChar(255)
  bobot        Int
  nilai_semhas nilai_semhas[]
}

model user {
  email     String      @id @db.VarChar(100)
  password  String      @db.VarChar(99)
  role      String      @db.VarChar(50)
  admin     admin[]
  dosen     dosen[]
  kadep     kadep[]
  mahasiswa mahasiswa[]
}

