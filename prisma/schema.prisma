generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model berkas_pdf {
  id            Int      @id @default(autoincrement())
  nama_file     String   @db.VarChar(255)
  tipe          String   @db.VarChar(50)  // contoh: "KRS", "Laporan", "PPT"
  file          Bytes    @db.Blob
  uploaded_by   String   @db.VarChar(100) // email user pengunggah
  createdAt     DateTime @default(now())

  user          user     @relation(fields: [uploaded_by], references: [email], onDelete: Cascade)

  @@index([uploaded_by])
}


model admin {
  niku       String    @id @db.VarChar(50)    // Mengubah dari Int ke String
  nama_admin String    @db.VarChar(255)
  email      String    @unique @db.VarChar(100)
  user        user     @relation(fields: [email], references: [email], map: "fk_user_admin") // Link kembali ke user
  panduan    panduan[]

  @@index([email])
}

model dosen {
  id_user        String      @id @db.VarChar(50) // Menjadikan id_user sebagai primary key untuk dosen
  bidang_keahlian String?    @db.VarChar(99)
  id_jadwal_dosen String    @db.VarChar(50)    
  jadwal_dosen   jadwal_dosen @relation(fields: [id_jadwal_dosen], references: [id_jadwal_dosen], onDelete: NoAction, onUpdate: NoAction)
  user           user        @relation(fields: [id_user], references: [id_user], onDelete: Cascade) // Relasi dengan user (id_user)

  @@index([id_jadwal_dosen], map: "fk_jadwal_dosen_dosen") 
  @@index([id_user], map: "fk_user_dosen")  // Relasi dengan id_user di user
}

model evaluasi_sistem {
  id               String       @id @default(cuid()) @db.VarChar(50)
  fitur            Int
  konten           Int
  responsif        Int
  kemudahan        Int
  dokumentasi      Int
  saran            String?
  kritik           String?
  createdAt        DateTime     @default(now())
}

model jadwal_dosen {
  id_jadwal_dosen String      @id @db.VarChar(50)  // Mengubah dari Int ke String
  tanggal_mulai   DateTime    @db.Date
  tanggal_selesai DateTime    @db.Date
  dosen           dosen[] // Relasi dengan dosen
}

model jadwal_pendaftaran {
  id_jadwal Int @id @default(autoincrement())
  id_pendaftaran Int
  jam_mulai      DateTime     @db.Time(0)
  jam_selesai    DateTime     @db.Time(0)
  status         String       @db.VarChar(50)
  dosen_penguji  String       @db.VarChar(99)
  id_kuota       String       @db.VarChar(50)   // Ubah menjadi opsional jika perlu
  kuota_semhas   kuota_semhas @relation(fields: [id_kuota], references: [id_kuota], onDelete: NoAction, onUpdate: NoAction, map: "fk_kuota_semhas_jadwal_pendaftaran")
  pendaftaran    pendaftaran?  @relation(fields: [id_pendaftaran], references: [id_pendaftaran], onUpdate: Restrict, map: "fk_pendaftaran_jadwal_pendaftaran")  // Tambahkan `?` untuk menjadikannya opsional

  @@index([id_kuota], map: "fk_kuota_semhas_jadwal_pendaftaran")
  @@index([id_pendaftaran], map: "fk_pendaftaran_jadwal_pendaftaran")
}

model kadep {
  nip_kadep  String @id @db.VarChar(50)   // Mengubah dari BigInt ke String
  nama_kadep String @db.VarChar(99)
  email      String @unique @db.VarChar(100)
  user        user     @relation(fields: [email], references: [email], map: "fk_user_kadep") // Link kembali ke user

  @@index([email])
}

model kuota_semhas {
  id_kuota           String    @id @db.VarChar(50)   // Mengubah dari Int ke String
  kuota_max          Int
  minggu             DateTime @db.Time(0)
  jadwal_pendaftaran jadwal_pendaftaran[]
}

model nilai_semhas {
  id_nilai        String      @id @db.VarChar(50)   // Mengubah dari Int ke String
  status_semhas   String      @db.VarChar(50)
  bobot_penilaian Int
  komentar        String      @db.Text
  id_rubik        String      @db.VarChar(50)   // Mengubah dari Int ke String
  id_pendaftaran  Int
  pendaftaran     pendaftaran @relation(fields: [id_pendaftaran], references: [id_pendaftaran], onUpdate: Restrict, map: "fk_pendaftaran_nilai_semhas")
  rubik           rubik       @relation(fields: [id_rubik], references: [id_rubik], onDelete: NoAction, onUpdate: NoAction, map: "fk_rubik_nilai_semhas")

  @@index([id_pendaftaran], map: "fk_pendaftaran_nilai_semhas")
  @@index([id_rubik], map: "fk_rubik_nilai_semhas")
}

model panduan {
  id_panduan     Int      @id @default(autoincrement())
  nama_file      String   @db.VarChar(255)
  tanggal_unggah DateTime @db.Date
  niku           String
  file          Bytes    @db.Blob
  admin          admin    @relation(fields: [niku], references: [niku], onDelete: NoAction, onUpdate: NoAction, map: "fk_admin_panduan")

  @@index([niku], map: "fk_admin_panduan")
}

model pendaftaran {
  id_pendaftaran     Int      @id @default(autoincrement()) 
  judul              String?  @db.VarChar(799)
  bidang_penelitian  String?  @db.VarChar(99)
  nip_dosen          String?  @db.VarChar(50)      // Menjadi opsional
  nama_laporan       String?  @db.VarChar(255)
  file_laporan       Bytes?   @db.Blob
  nama_krs           String?  @db.VarChar(255)
  file_krs           Bytes?   @db.Blob
  nama_pengesahan    String?  @db.VarChar(255)
  file_pengesahan    Bytes?   @db.Blob
  nama_ppt           String?  @db.VarChar(255)
  file_ppt           Bytes?   @db.Blob
  id_periode         String?  @db.VarChar(50)      // Menjadi opsional
  jadwal_pendaftaran jadwal_pendaftaran[]
  nilai_semhas       nilai_semhas[]
  periode_semhas     periode_semhas?  @relation(fields: [id_periode], references: [id_periode], onDelete: NoAction, onUpdate: NoAction)
  user               user     @relation(fields: [id_user], references: [id_user], onDelete: Cascade) // Relasi dengan user
  id_user            String   @db.VarChar(50) // id_user mahasiswa atau dosen

  @@index([nip_dosen], map: "fk_dosen_pendaftaran")
  @@index([id_periode], map: "fk_periode_semhas_pendaftaran")
}


model periode_semhas {
  id_periode    String       @id @db.VarChar(50)   // Mengubah dari Int ke String
  semester      Int
  tanggal_buka  DateTime      @db.Date
  tanggal_tutup DateTime      @db.Date
  status        String        @db.VarChar(50)
  pendaftaran   pendaftaran[]
}

model rubik {
  id_rubik     String    @id @db.VarChar(50)   // Mengubah dari Int ke String
  kriteria     String   @db.VarChar(255)
  bobot        Int
  nilai_semhas nilai_semhas[]
}

enum Role {
  ADMIN
  DOSEN
  KADEP
  MAHASISWA
}

model user {
  password      String      @db.VarChar(99)
  email         String      @id @db.VarChar(100)
  role          String      @db.VarChar(50)
  id_user       String?     @unique(map: "id_user") @db.VarChar(50) // id_user digunakan untuk mahasiswa dan dosen
  nama_lengkap  String      @db.VarChar(99) // Nama Lengkap untuk semua role (mahasiswa, dosen, admin, dll)
  admin         admin[]
  dosen         dosen[]
  kadep         kadep[]
  pendaftaran   pendaftaran[]
  berkas_pdf    berkas_pdf[]
}

